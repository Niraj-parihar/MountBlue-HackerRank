// void swap(int *a,int *b){
//     int temp;
//     temp=*a;
//     *a=*b;
//     *b=temp;
// }

vector<int> quickSort(vector<int> arr) {
//         int pivot=arr[0];
//     int n=arr.size();
//     int i=1;
//     int j=n-1;
//     do{
//    do{i++;}while(arr[i]<=pivot);
//         do{j--;}while(arr[j]>pivot);
//         if(i<j){
//                swap(&arr[i],&arr[j]);
//         }
//     }while(i<j);
    
//     swap(&pivot,&arr[j]);
//     return arr;
    vector<int> left,right,equal;
    int n=arr.size();
    
    for(int i=0;i<n;i++){
if(arr[i]<arr[0]) left.push_back(arr[i]);
        else if(arr[i]>arr[0]) right.push_back(arr[i]);
        else {equal.push_back(arr[i]);}
    }
    left.insert(left.end(),equal.begin(),equal.end());
    left.insert(left.end(),right.begin(),right.end());
return left;
}
